#
# Configure XRootD Caching Proxy (`XCache`)
#
# **********************************************************************
# * WARNING: DO NOT EDIT THIS FILE.  IT WILL BE OVERWRITTEN ON UPGRADE *
# **********************************************************************
#
# This file is part of the XCache Daemon

# Load the correct libraries for XCache to operate:
# First, the proxy library itself.
ofs.osslib  libXrdPss.so
# Second, the cache underlying the proxy.
pss.cachelib libXrdFileCache.so

if defined ?proxyorigin
   pss.origin $(proxyorigin)
else
   pss.origin redirector.osgstorage.org:1094
fi

# Cache plugin parameters
#
# The default values here should be sufficient for most use cases. Override them
# by setting the XC_BLOCKSIZE, XC_PREFETCH, XC_RAMSIZE, XC_SPACE_LOW_WM,
# XC_SPACE_HIGH_WM environment variables for the XRootD processes

if defined ?~XC_BLOCKSIZE
   set eBLOCKSIZE=$XC_BLOCKSIZE
else
   set eBLOCKSIZE=512k
fi

if defined ?~XC_PREFETCH
   set ePREFETCH=$XC_PREFETCH
else
   set ePREFETCH=10
fi

if defined ?~XC_RAMSIZE
   set eRAMSIZE=$XC_RAMSIZE
else
   set eRAMSIZE=1g
fi

if defined ?~XC_SPACE_LOW_WM
   set eSPACELOWWM=$XC_SPACE_LOW_WM
else
   set eSPACELOWWM=0.90
fi

if defined ?~XC_SPACE_HIGH_WM
   set eSPACEHIGHWM=$XC_SPACE_HIGH_WM
else
   set eSPACEHIGHWM=0.95
fi

# The size of the blocks in cache; all reads to the data federation
# will be rounded along these boundaries.
pfc.blocksize $eBLOCKSIZE
# Amount of memory to use for blocks in flight; this is NOT a RAM cache,
# just a temporary buffer.
# 1GB is 200 files concurrently downloaded with 10 prefetch blocks.
pfc.ram $eRAMSIZE
# Number of blocks to prefetch from a file at once.
pfc.prefetch $ePREFETCH
# The low-water and high-water marks for the disk usage; once disk usage
# goes above the high-water mark, the cache deletes until it hits the low-water
# mark.
pfc.diskusage $eSPACELOWWM $eSPACEHIGHWM


